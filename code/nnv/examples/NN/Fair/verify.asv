%% Fairness verification of an NN
% Code based on a few examples
% Data Preprocessing: https://github.com/jonathanlxy/MLproject-UCI-Adult-Income-Classification
% Ideas: https://github.com/LebronX/DeepGemini-public/blob/main/src/German/german_fairness_training.py
% Implementattion/Traihttps://github.com/LebronX/DeepGemini-public/blob/main/src/German/german_fairness_training.pyning

t = tic % track total time for training

%% Read data
Train = csvread('finalset_cleaned_train.csv', 1, 0);
Test  = csvread('finalset_cleaned_test.csv', 1, 0);

% For the training dataset
XTrain = Train(:, 1:end-1); % All rows, but exclude the last column
YTrain = Train(:, end); % All rows, only the last column

% For the testing dataset
XTest = Test(:, 1:end-1); % All rows, but exclude the last column
YTest = Test(:, end); % All rows, only the last column

YTrain = categorical(YTrain);
YTest = categorical(YTest);

N = 13; % Number of features after preprocessing
numClasses = 2; % For binary classification

%% Neural Network
layers = [
    featureInputLayer(N)
    fullyConnectedLayer(50)
    reluLayer;
    
    fullyConnectedLayer(50)
    reluLayer;

    fullyConnectedLayer(numClasses)
    softmaxLayer
    classificationLayer]; 

% Training options
options = trainingOptions('adam', ...
    'InitialLearnRate',0.001, ...
    'MaxEpochs',200, ...
    'Shuffle','every-epoch', ...
    'ValidationData',{XTest,YTest}, ...
    'ValidationFrequency',30, ...
    'OutputNetwork','best-validation-loss',...
    'Verbose',true);

% Train network
net = trainNetwork(XTrain,YTrain,layers,options);